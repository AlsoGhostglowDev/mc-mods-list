name: Zip Each Directory Separately

on: 
  push:
    branches:
      - main  # or master, adjust as needed
  workflow_dispatch:  # Allows manual triggering

jobs:
  zip-directories:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create ZIP files for each directory (excluding .git)
        run: |
          shopt -s dotglob  # Include hidden files
          for dir in */; do
            if [ -d "$dir" ]; then  # Ensure it's a directory
              zip -r "${dir%/}.zip" "$dir" -x "$dir.git/*"  # Exclude .git directory
            fi
          done

      - name: Create GitHub Release if not exists
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}  # Use PAT for GitHub CLI
        run: |
          RELEASE_NAME="Release $(date +'%Y-%m-%d_%H-%M-%S')"
          TAG_NAME="v$(date +'%Y-%m-%d_%H-%M-%S')"  # You can modify this to follow your versioning style
          
          # Check if the release exists
          EXISTING_RELEASE=$(gh release view "$TAG_NAME" --json name --jq .name || echo "not found")
          
          if [ "$EXISTING_RELEASE" == "not found" ]; then
            # Create a new release if it doesn't exist
            echo "Creating new release..."
            gh release create "$TAG_NAME" --title "$RELEASE_NAME" --notes "Automated release created by GitHub Actions"
          else
            echo "Release $TAG_NAME already exists."
          fi

      - name: Upload ZIP files as separate artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}  # Use PAT for GitHub CLI
        run: |
          for zipfile in *.zip; do
            echo "Uploading $zipfile"
            gh release upload "$TAG_NAME" "$zipfile" --clobber
          done  # Ensure proper loop closure
